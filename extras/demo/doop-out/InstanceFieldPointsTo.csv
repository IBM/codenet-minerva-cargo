[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: java.lang.String userID>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF::MockObject
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: java.lang.String password>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor this$0>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor this$0>	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.lang.Integer/0	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer orderID>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderType>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderType>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderType>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderType>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderType>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderStatus>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderStatus>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderStatus>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderStatus>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderStatus>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderStatus>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String orderStatus>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/0	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date openDate>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/1	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date completionDate>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal orderFee>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal orderFee>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal orderFee>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal orderFee>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean quote>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean quote>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean quote>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean holding>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean holding>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean holding>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean holding>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String symbol>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.lang.Integer/0	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer holdingID>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.util.Date/0	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date purchaseDate>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String quoteID>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean quote>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean quote>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean cdiBean>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: javax.servlet.ServletInputStream input>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: javax.servlet.ServletInputStream input>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: javax.servlet.ServletOutputStream output>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: javax.servlet.ServletOutputStream output>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: javax.servlet.FilterConfig filterConfig>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean cdiBean>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: java.lang.String decodedAction>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: java.lang.String decodedAction>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: java.lang.String msg>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction tsAction>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean hitCountBean>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[] quotes>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String symbols>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String symbols>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new byte[]/0	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: byte[] byteVal>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new byte[]/0	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: byte[] byteVal>	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new char[]/0	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: char[] charVal>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new char[]/0	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: char[] charVal>	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/0	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: java.lang.String s1>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/0	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: java.lang.String s1>	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/1	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: java.lang.String s2>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/1	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: java.lang.String s2>	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.lang.Integer/0	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer accountID>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/0	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date lastLogin>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/1	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date creationDate>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean profile>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean profile>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean profile>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String profileID>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String profileID>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String profileID>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.Date/0	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: java.util.Date currentTime>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: com.ibm.websphere.samples.daytrader.web.jsf.OrderData[] closedOrders>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/1	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: com.ibm.websphere.samples.daytrader.web.jsf.OrderData[] allOrders>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: java.lang.String value>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: com.ibm.websphere.samples.daytrader.util.MDBStats mdbStats>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: com.ibm.websphere.samples.daytrader.util.MDBStats mdbStats>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new java.util.concurrent.CountDownLatch/0	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: java.util.concurrent.CountDownLatch latch>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>()>/new java.util.concurrent.CountDownLatch/0	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: java.util.concurrent.CountDownLatch latch>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: javax.servlet.ServletInputStream input>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: javax.servlet.ServletInputStream input>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: javax.servlet.http.HttpServletResponse res>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: javax.servlet.http.HttpServletResponse res>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: javax.servlet.AsyncContext ac>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: javax.servlet.AsyncContext ac>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/new java.util.concurrent.LinkedBlockingQueue/0	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: java.util.Queue queue>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/new java.util.concurrent.LinkedBlockingQueue/0	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: java.util.Queue queue>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async this$0>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async this$0>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String symbol>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String symbol>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String symbol>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String companyName>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String companyName>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String companyName>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeDirect>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeDirect>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[] topGainers>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/1	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[] topLosers>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: java.math.BigDecimal gainPercent>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/new java.util.ArrayList/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List list>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/0	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: java.math.BigDecimal totalGain>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/1	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: java.math.BigDecimal totalValue>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/2	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: java.math.BigDecimal totalBasis>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/3	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: java.math.BigDecimal totalGainPercent>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new java.util.ArrayList/0	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: java.util.ArrayList holdingDatas>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal gainPercent>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal gainPercent>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: javax.servlet.ServletInputStream input>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: javax.servlet.ServletInputStream input>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: javax.servlet.http.HttpServletResponse res>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: javax.servlet.http.HttpServletResponse res>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: javax.servlet.AsyncContext ac>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: javax.servlet.AsyncContext ac>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<string-builder>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: java.lang.StringBuilder sb>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	<<string-builder>>	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: java.lang.StringBuilder sb>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead this$0>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead this$0>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: com.ibm.websphere.samples.daytrader.interfaces.TradeServices trade>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: com.ibm.websphere.samples.daytrader.interfaces.TradeServices trade>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject
[<<immutable-hcontext>>]	<<null pseudo heap>>	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: javax.servlet.FilterConfig filterConfig>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread this$0>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread this$0>	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean cdiBean>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI::MockObject
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: int[] iMinArray>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: int[] iMinArray>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: int[] iMinArray>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: int[] iMinArray>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.Integer[] iMaxArray>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.Integer[] iMaxArray>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.Integer[] iMaxArray>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.Integer[] iMaxArray>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String pattern>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String pattern>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String pattern>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String pattern>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: com.ibm.websphere.samples.daytrader.interfaces.TradeServices trade>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: com.ibm.websphere.samples.daytrader.interfaces.TradeServices trade>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: java.util.List numbers>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: java.util.List numbers>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: java.util.List strings>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: java.util.List strings>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: com.ibm.websphere.samples.daytrader.interfaces.TradeServices tradeSLSBLocal>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String userID>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String userID>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String userID>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String passwd>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String passwd>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String passwd>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String passwd>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String fullName>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String fullName>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String fullName>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String fullName>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String address>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String address>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String address>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String address>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String email>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String email>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String email>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String email>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String creditCard>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String creditCard>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	<<string-constant>>	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String creditCard>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	java.lang.String::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String creditCard>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean account>	[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject
