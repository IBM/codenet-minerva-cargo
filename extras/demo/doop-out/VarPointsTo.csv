[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndBalance()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stack2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/symbols#_383
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/symbols_$$A_1#_387
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack30
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack36
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack70
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack80
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack90
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stack5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stack5_$$A_1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stack5_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stack9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/$stack1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant22
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant23
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant26
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant27
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant28
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant29
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant30
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant31
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant32
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant33
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant34
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant36
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant37
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant38
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant39
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant40
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant41
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant42
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stringconstant43
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isBuy()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isSell()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isOpen()>/orderStatus#_292
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isOpen()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isOpen()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/orderStatus#_300
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCancelled()>/orderStatus#_309
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCancelled()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void cancel()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void destroy()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/msg3#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stack8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stack17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void <clinit>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/currentConfigStr#_99
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant22
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant23
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/fileURL#_85
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant26
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant27
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant28
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant29
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant30
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant31
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant32
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant33
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant34
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant36
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant37
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant38
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant39
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant40
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant41
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant42
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/result#_224
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1#_263
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/result_$$A_1#_234
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_1_$$A_1#_265
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_2#_267
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_3#_269
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_4#_271
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_5#_292
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_6#_282
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/result_$$A_3#_282
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_7#_232
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/result_$$A_4#_232
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e_$$A_1_$$A_8#_289
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/result_$$A_5#_289
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant22
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant23
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant26
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant27
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant28
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack55
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack57
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack58
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack60
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack55_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack57_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack58_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack60_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack60_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack58_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack57_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack55_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/$stack8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/money#_225
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack138
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant22
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant23
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant26
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant27
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant28
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant29
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant30
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant31
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant32
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant33
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant34
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant36
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant37
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant38
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant39
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant40
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant41
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant42
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stack16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stack16_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/$stack8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack33
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant22
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant23
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant26
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant27
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant28
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant29
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant30
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant31
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant32
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant33
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant34
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant36
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant37
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant38
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stringconstant39
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextDestroyed(javax.servlet.ServletContextEvent)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer#_84
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer_$$A_1#_85
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer_$$A_3#_87
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer_$$A_4#_97
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent2(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: java.lang.String getServletInfo()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack55
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack57
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack58
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack60
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack55_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack57_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack58_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack60_$$A_2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack60_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack58_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack57_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack55_$$A_3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/$stack1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderType#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/orderType#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/fileURL#_85
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/msg3#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stack8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stack17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/results#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/results_$$A_2#_93
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/currentConfigStr#_99
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant22
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant23
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant26
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant27
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant28
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant29
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant30
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant31
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant32
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant33
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant34
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant36
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant37
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant38
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant39
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant40
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant41
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant42
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndBalance()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stack2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/symbols#_383
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/symbols_$$A_1#_387
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/money#_225
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack138
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant17
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant18
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant20
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant21
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant22
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant23
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant25
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant26
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant27
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant28
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant29
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant30
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant31
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant32
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant33
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant34
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant35
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant36
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant37
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant38
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant39
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant40
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant41
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant42
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer#_84
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer_$$A_1#_85
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer_$$A_3#_87
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buffer_$$A_4#_97
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack45
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/symbols#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getSymbols()>/$stack1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/msg3#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/msg2#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/msg2#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/msg3#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/results#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack49
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/cpassword#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/address#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/email#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/creditcard#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results#_156
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_1#_161
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_2#_164
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_3#_166
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_4#_171
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_5#_172
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_6#_183
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/results#_213
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stack14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stack29
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/results#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack45
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack24
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/results#_328
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/results_$$A_1#_340
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/results_$$A_2#_362
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/results_$$A_3#_362
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/results_$$A_4#_336
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/results#_390
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stack11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack19
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack57
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack15
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stack16
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stack39
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results#_562
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_1#_570
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_3#_578
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_4#_582
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_5#_586
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/results_$$A_6#_581
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/results#_618
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stack11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/status#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/page#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stack5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant13
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant14
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg1#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant12
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant6
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant7
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant8
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant9
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant10
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant11
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/message#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stringconstant5
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/value#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant3
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stringconstant4
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stringconstant2
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stringconstant0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stringconstant1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter5
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/address#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/email#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/password#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/address#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/email#_0
[<<immutable-hcontext>>]	<<string-constant>>	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_72
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_72
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/outputBuffer#_75
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack11
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_68
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_71
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack40
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/response#_100
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_68
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_72
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_73
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/parsedJSON#_95
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_84
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_68
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack11
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_68
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/outputBuffer#_75
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_68
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_73
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_71
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_68
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack40
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/response#_100
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_84
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/parsedJSON#_95
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_72
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack11
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/msg#_108
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_72
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_72
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/output#_70
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack11
[<<immutable-hcontext>>]	<<string-buffer>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/msg#_108
[<<immutable-hcontext>>]	<<string-buffer>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack11
[<<immutable-hcontext>>]	<<string-buffer>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/msg#_108
[<<immutable-hcontext>>]	<<string-buffer>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack11
[<<immutable-hcontext>>]	<<string-buffer>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/msg#_108
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack40
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack48
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack56
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack64
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack74
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack84
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack11
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack18
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack6
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/$stack9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack72
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack88
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack96
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack179
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack184
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack190
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack195
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack201
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack206
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack212
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack217
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack223
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack228
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack234
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack240
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack20
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack41
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack48
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack64
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack80
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack20
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack53
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack64
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack69
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack24
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack11
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack28
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack16
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack62
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack74
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack81
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack42
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack11
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u6
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u11
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u12
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack33
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sb#_60
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack43
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack17
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack16
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack28
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack40
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack50
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack43
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack32
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack42
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack54
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack38
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack46
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stack28
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stack36
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/$stack45
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack29
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack34
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack40
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack49
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack56
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack61
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/$stack67
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack16
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack20
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack31
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack44
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack6
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack27
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack40
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack38
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack46
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sb#_60
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack42
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack16
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack62
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack74
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack81
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack11
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack32
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack42
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack54
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack39
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack43
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack72
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack88
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack96
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack179
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack184
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack190
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack195
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack201
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack206
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack212
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack217
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack223
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack228
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack234
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack240
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack20
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack41
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack48
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack56
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack64
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack80
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u6
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u9
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u11
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u12
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack24
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack27
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack40
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack44
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack13
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack20
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/$stack31
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack30
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack43
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/$stack4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$u4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u4
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/$stack0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack11
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack28
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack10
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack17
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack33
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack15
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack52
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack16
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack25
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/$stack2
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack8
[<<immutable-hcontext>>]	<<string-builder>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack23
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack21
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack14
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/$stack22
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack1
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stack12
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$stack5
[<<immutable-hcontext>>]	<<string-builder>>	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/$stack11
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<main-thread>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/$stack6
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack5
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack6
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stack2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_USERS(int)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/listener#_77
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/listener_$$A_2#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/listener_$$A_3#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stack4
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stack6
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stack15
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stack16
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void <init>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void destroy()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg2#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis#_71
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos#_72
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_2#_110
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_2#_110
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_3#_113
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_3#_113
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_4#_96
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_4#_96
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/action#_223
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/dbProductName#_246
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/dbProductName_$$A_2#_279
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/dbProductName_$$A_3#_251
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/dbProductName_$$A_4#_282
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/dbProductName_$$A_5#_232
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/action_$$A_2#_232
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/dbProductName_$$A_6#_289
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/action_$$A_3#_289
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message#_82
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_1#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_3#_126
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_4#_133
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_5#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_6#_130
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void <clinit>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#9#_140
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/session#_141
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/session_$$A_2#_129
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#9_$$A_2#_129
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_2#_152
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_3#_154
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/session_$$A_3#_154
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#9_$$A_3#_154
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_6#_290
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/$stack2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID#_66
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans#_75
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans_$$A_3#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_3#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans_$$A_4#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_4#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData#_566
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData_$$A_2#_583
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData_$$A_3#_581
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData_$$A_4#_580
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_70
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_101
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_5#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_69
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_83
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_2#_87
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_105
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_83
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_5#_103
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void <clinit>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack10
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_64
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_71
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_93
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol#_68
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_2#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_100
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_3#_100
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote#_65
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_3#_102
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_4#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_5#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack15
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_82
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_2#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_102
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_3#_102
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/$stack1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/$stack2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_1#_87
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_3#_128
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_4#_135
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_5#_87
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_6#_132
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID#_71
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans#_72
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_1#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_1#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_3#_111
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_3#_111
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_4#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_4#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_5#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_5#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/$stack0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/$stack1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: void <clinit>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/$stack7
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void destroy()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <clinit>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol#_83
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_92
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_95
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_95
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_2#_95
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_3#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData#_75
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData_$$A_3#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData_$$A_4#_92
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/$stack15
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/$stack1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/$stack2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_64
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_71
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_93
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID#_66
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans#_75
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans_$$A_3#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_3#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/orderDataBeans_$$A_4#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_4#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/holding#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData#_566
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData_$$A_2#_583
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData_$$A_3#_581
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/quoteData_$$A_4#_580
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack22
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData#_75
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData_$$A_3#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/accountProfileData_$$A_4#_92
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis#_71
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos#_72
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_2#_110
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_2#_110
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_3#_113
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_3#_113
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_4#_96
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_4#_96
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID#_71
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans#_72
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_1#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_1#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_3#_111
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_3#_111
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_4#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_4#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/holdingDataBeans_$$A_5#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_5#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack10
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_70
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_101
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_5#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_69
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_83
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_2#_87
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_105
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_83
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_5#_103
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote#_65
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_1#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_3#_102
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_4#_78
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quote_$$A_5#_99
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_USERS(int)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack5
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/$stack6
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/$stack2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#9#_140
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/session#_141
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/session_$$A_2#_129
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#9_$$A_2#_129
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_2#_152
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_3#_154
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/session_$$A_3#_154
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#9_$$A_3#_154
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/userID_$$A_6#_290
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg2#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol#_83
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_92
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_95
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_95
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_2#_95
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_3#_109
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack10
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack12
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack45
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack14
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getSymbols()>/$stack1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg2#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol#_68
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_2#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_100
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_3#_100
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message#_84
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_1#_87
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_3#_128
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_4#_135
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_5#_87
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_6#_132
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg2#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol#_81
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData#_82
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_1#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_3#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_2#_91
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/quoteData_$$A_4#_102
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/symbol_$$A_3#_102
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack7
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack8
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message#_82
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_1#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_3#_126
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_4#_133
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_5#_85
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/message_$$A_6#_130
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/msg2#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack10
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName#_50
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_1#_55
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_3#_64
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_4#_70
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_5#_72
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/@parameter1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/x1#_0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack7
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack8
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack10
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName#_50
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_1#_55
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_3#_64
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_4#_70
[<<immutable-hcontext>>]	<<null pseudo heap>>	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/keyName_$$A_5#_72
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack7
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack8
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack7
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack8
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null2
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null0
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null1
[<<immutable-hcontext>>]	<<null pseudo heap>>	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$null2
[<<immutable-hcontext>>]	<class com.ibm.websphere.samples.daytrader.util.TradeConfig>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/l4#_247
[<<immutable-hcontext>>]	<class com.ibm.websphere.samples.daytrader.util.TradeConfig>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/l4#_247
[<<immutable-hcontext>>]	<class com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$classconstant0
[<<immutable-hcontext>>]	<class com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler>	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$classconstant0
[<<immutable-hcontext>>]	<class com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1>	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <clinit>()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/new java.lang.Float/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/$stack1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/$stack1
[com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/new java.lang.Float/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/$stack7
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/$stack7
[com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/$stack0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack15
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack15
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack15
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack15
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack15
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack17
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack19
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack19
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack19
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack19
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack19
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/simpleBean2#_67
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack6
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/simpleBean2#_67
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/orderID#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/orderID#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/openDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/openDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/completionDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/completionDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack19
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack33
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack35
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack89
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getOrderProcessingModeNames()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack176
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack31
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getOrderProcessingModeNames()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack176
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack27
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack29
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack79
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack21
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack23
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/$stack69
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getWebInterfaceNames()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack167
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack33
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getWebInterfaceNames()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack167
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack33
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.Object/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.Object/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/l1#_291
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.Object/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.Object/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.Object/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/l1#_291
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean rndBoolean()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.util.Random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack11
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack12
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_1#_388
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_3#_391
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_1#_388
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_3#_391
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/changeFactor#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack14
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack15
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack19
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack19
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack17
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack18
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_2#_390
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_3#_391
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_2#_390
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_3#_391
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/changeFactor#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[][]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[][]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack19
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[][]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[][]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[][]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack19
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack8
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack20
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack21
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack8
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack20
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack8
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack20
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack22
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack8
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new int[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack20
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new char[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack11
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new char[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack9
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new char[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack23
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new char[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack11
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new char[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[][]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[][]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack24
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[][]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[][]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack25
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack26
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack27
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.lang.String[]/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack28
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/orderFee#_125
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderFee#_181
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/orderFee#_125
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderFee#_181
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/4	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack29
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/orderFee#_125
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderFee#_181
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/orderFee#_125
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderFee#_181
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack16
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/5	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/orderFee#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/percentGainBD_$$A_1#_367
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/percentGainBD_$$A_2#_368
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/$stack30
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack39
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack62
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/newPrice#_77
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@parameter1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/percentGainBD_$$A_1#_367
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/percentGainBD_$$A_2#_368
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack39
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack62
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/changeFactor_$$A_3#_391
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/changeFactor#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/percentGainBD_$$A_1#_367
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/percentGainBD_$$A_2#_368
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/new java.math.BigDecimal/6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/newPrice#_77
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/holdingID#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/holdingID#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/@parameter3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/purchaseDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/purchaseDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack18
[com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringReader/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack18
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/readListener#_67
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/readListener#_67
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/listener_$$A_1#_79
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/listener_$$A_2#_84
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/listener_$$A_3#_99
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new java.lang.IllegalArgumentException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/new byte[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/data#_122
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/new java.lang.String/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/new java.lang.String/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/dataRead#_126
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/currentConfig#_66
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/currentConfig#_66
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/runStatsData#_74
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/runStatsData_$$A_2#_93
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/runStatsData#_74
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/runStatsData_$$A_2#_93
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/currentConfig#_75
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/currentConfig#_75
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u1
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new com.ibm.websphere.samples.daytrader.util.TradeConfig/0]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <init>()>/this#_0
[<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/new java.io.StringReader/0	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack5
[<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/new java.io.StringReader/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/ab#_74
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/ab#_74
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/url#_86
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/url#_86
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_1#_88
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_2#_110
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_3#_113
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_4#_96
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u3
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_1#_88
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_2#_110
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_3#_113
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedInputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bis_$$A_4#_96
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_1#_91
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_2#_110
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_3#_113
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_4#_96
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u4
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_1#_91
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_2#_110
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_3#_113
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedOutputStream/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/bos_$$A_4#_96
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new byte[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buff#_92
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new byte[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/buff#_92
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new java.io.StringReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/$stack4
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new java.io.StringReader/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/message#_40
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setKey(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setKey(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setValue(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setValue(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/$stack2
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/$stack7
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/message#_40
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setKey(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setKey(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setValue(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void setValue(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: boolean willDecode(java.lang.String)>/new java.io.StringReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: boolean willDecode(java.lang.String)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringReader/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack19
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/trade#_77
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/trade#_77
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_1#_128
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_2#_130
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_3#_115
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_4#_156
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_1#_128
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_2#_130
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_3#_115
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sessionData_$$A_4#_156
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack59
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack91
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/@parameter4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/holdingID#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack91
[com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/@parameter4
[com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/holdingID#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack28
[com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack28
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new java.util.StringTokenizer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/st#_75
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new java.util.StringTokenizer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack13
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setQuotes(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/@parameter0
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/quoteDatas#_76
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setQuotes(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/quotes#_0
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/$stack20
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/@this
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.PrintWriter/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#_125
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.PrintWriter/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.PrintWriter/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/out#_125
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.PrintWriter/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u7
[com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new byte[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack4
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new byte[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack15
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new byte[]/0	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack4
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new byte[]/0	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack15
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new char[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack5
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new char[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack10
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new char[]/0	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack5
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new char[]/0	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack10
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack6
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/0	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack6
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack7
[<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/new java.lang.String/1	[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/new java.lang.String/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/$stack14
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/new javax.naming.InitialContext/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/$stack3
[com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/new javax.naming.InitialContext/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/$stack5
[com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/new java.lang.annotation.Annotation[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/$stack5
[com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/new java.lang.annotation.Annotation[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/$stack3
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/$stack5
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/$stack8
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/new int[]/0	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack15
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/$stack15
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/accountID#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.lang.Integer/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/accountID#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/lastLogin#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/lastLogin#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/creationDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new java.util.Date/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/creationDate#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/readListener#_63
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/readListener#_63
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/new java.sql.Timestamp/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$u3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs#_109
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_1#_122
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_3#_142
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_4#_114
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_5#_149
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setClosedOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setClosedOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/closedOrders#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r#_112
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_1#_116
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_2#_122
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_3#_132
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_5#_142
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_6#_114
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_7#_149
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/simpleBean1#_67
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack6
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/simpleBean1#_67
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$stack21
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$stack21_$$A_2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/closedOrders_$$A_2#_125
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$stack21_$$A_3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/closedOrders_$$A_3#_114
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$stack21_$$A_4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/closedOrders_$$A_4#_149
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_2#_129
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_3#_142
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_4#_114
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/orderjsfs_$$A_5#_149
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAllOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAllOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/allOrders#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_3#_132
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_4#_136
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_5#_142
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_6#_114
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/r_$$A_7#_149
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/$u3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCurrentTime(java.util.Date)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCurrentTime(java.util.Date)>/currentTime#_0
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new byte[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/b#_63
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new byte[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/b#_63
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.String/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack27
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.String/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/data#_66
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.String/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack27
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.String/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/data#_66
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$u0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$u2
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderData#_162
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderdata#_94
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderData#_162
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderdata#_94
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new java.sql.Timestamp/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u2
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new java.sql.Timestamp/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u3
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u6
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$u6
[<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/new java.math.BigDecimal/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/$stack11
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$u1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new java.util.concurrent.CountDownLatch/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>()>/new java.util.concurrent.CountDownLatch/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new javax.ejb.EJBException/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u3
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new javax.ejb.EJBException/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new java.sql.Timestamp/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u4
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new java.sql.Timestamp/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new java.sql.Timestamp/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u6
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/new java.sql.Timestamp/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$u6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/new java.lang.UnsupportedOperationException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack3
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/new java.lang.UnsupportedOperationException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/new javax.persistence.criteria.Predicate[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack14
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/new javax.persistence.criteria.Predicate[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack14
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/quote#_349
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack6
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/quote#_349
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$u0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack6
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$u2
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$u2
[<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/new java.util.concurrent.LinkedBlockingQueue/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$stack5
[<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/new java.util.concurrent.LinkedBlockingQueue/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack49
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack7
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack49
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack7
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/quote1#_75
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/quote2#_76
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$u1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack12
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/profile_$$A_1#_495
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/profile#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack12
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/profile_$$A_1#_495
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@parameter0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/profile#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack13
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/account#_496
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack10
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack13
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/account#_496
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack10
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new java.sql.Timestamp/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack14
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new java.sql.Timestamp/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack14
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$u1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/order#_542
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/order#_121
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/order#_172
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack9
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/orderdata#_81
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderdata#_94
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/order#_121
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/order#_172
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/order#_542
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$u1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack9
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/orderdata#_81
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/orderdata#_94
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new java.sql.Timestamp/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$u0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new java.sql.Timestamp/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new javax.ejb.EJBException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$u2
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new javax.ejb.EJBException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/newHolding#_552
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/newHolding#_250
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/newHolding#_250
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/$stack7
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/newHolding#_552
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new java.sql.Timestamp/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/$stack8
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new java.sql.Timestamp/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$u1
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/new java.lang.UnsupportedOperationException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/$stack2
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/new java.lang.UnsupportedOperationException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/new javax.naming.InitialContext/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/new javax.naming.InitialContext/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/context#_118
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/orderDataBeans#_100
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack15
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack15_$$A_2
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack15_$$A_3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack15_$$A_4
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$stack15_$$A_5
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/accountProfileData#_167
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/obj#_91
[com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.net.URL/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/obj#_91
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/in#_98
[com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedReader/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack37
[com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.BufferedReader/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/in#_98
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.InputStreamReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack38
[com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.InputStreamReader/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack38
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/new java.lang.Double/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/$u5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u4
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u5
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/$u3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/quoteDataBeans#_457
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/new java.lang.UnsupportedOperationException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stack2
[com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/new java.lang.UnsupportedOperationException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/new java.lang.UnsupportedOperationException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/$stack5
[com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/new java.lang.UnsupportedOperationException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/new java.lang.UnsupportedOperationException/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/$stack2
[com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/new java.lang.UnsupportedOperationException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/$stack2
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u4
[com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeHoldingsTotal(java.util.Collection)>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeHoldingsTotal(java.util.Collection)>/$stack5
[com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeHoldingsTotal(java.util.Collection)>/new java.math.BigDecimal/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeHoldingsTotal(java.util.Collection)>/$stack12
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/quoteDataBeans#_513
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: void <clinit>()>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: void <clinit>()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: void <clinit>()>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: void <clinit>()>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: void <clinit>()>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: void <clinit>()>/$stack4
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new java.math.BigDecimal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/$u3
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/new javax.servlet.ServletException/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/$u1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/gainerjsfs#_75
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopGainers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopGainers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/topGainers#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r#_76
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/$stack39
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_1_$$A_1#_79
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_2#_91
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_4#_78
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_5#_103
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_1#_88
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopLosers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopLosers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/topLosers#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/$stack26
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_2#_91
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_3#_94
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_4#_78
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/r_$$A_5#_103
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/new java.util.Properties/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/new java.util.Properties/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/prop#_44
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack43
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/@parameter0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/currentBalance#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack24
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack40
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/@parameter1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/openBalance#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack23
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack38
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.math.BigDecimal/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack52
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack31
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new java.math.BigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack35
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/$stack45
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/h#_100
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setHoldingID(java.lang.Integer)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setHoldingID(java.lang.Integer)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setQuantity(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setQuantity(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPurchasePrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPurchasePrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPurchaseDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPurchaseDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setQuoteID(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setQuoteID(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setBasis(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setBasis(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setMarketValue(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setMarketValue(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setGain(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setGain(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/new java.sql.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/$stack7
[<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/new java.sql.Date/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/$stack5
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/gain#_71
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new java.util.ArrayList/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/$stack6
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new java.util.ArrayList/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/lose#_72
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/$stack7
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.util.Date/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/$stack9
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/quoteDataBeans#_69
[com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesGet(java.lang.String)>/$stack2
[com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/new java.util.ArrayList/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesPost(java.lang.String)>/$stack2
[com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/$stack9
[com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/new java.util.ArrayList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/quoteDataBeans#_69
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/actionMessage#_46
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/$stack2
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/$stack8
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/actionMessage#_46
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/$stack1
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0]	<com.ibm.websphere.samples.daytrader.util.MDBStats: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/new com.ibm.websphere.samples.daytrader.util.MDBStats/0]	<com.ibm.websphere.samples.daytrader.util.MDBStats: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringWriter/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringWriter/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sw#_85
[com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringWriter/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringWriter/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/sw#_85
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringReader/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.io.StringReader/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack23
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack45
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_1#_85
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_3#_88
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_4#_92
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_5#_119
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack45
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_1#_85
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_3#_88
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_4#_92
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_5#_119
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_2#_87
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_3#_88
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_4#_92
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_5#_119
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack8
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_2#_87
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_3#_88
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_4#_92
[com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_5#_119
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack31
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_1#_88
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_2#_90
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_3#_109
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_4#_108
[com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack31
[com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_1#_88
[com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_2#_90
[com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_3#_109
[com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new java.lang.Integer/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/e#4_$$A_4#_108
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack3
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack3
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack3
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new int[]/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack3
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack4
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack4
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack4
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new java.lang.Integer[]/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack4
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack10
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/nContext#_63
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack10
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/nContext#_63
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack10
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/nContext#_63
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/$stack10
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/new javax.naming.InitialContext/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/nContext#_63
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.Class[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack5
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.Class[]/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack5
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.Class[]/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack5
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.Class[]/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack5
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.IllegalStateException/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack20
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.IllegalStateException/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack20
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.IllegalStateException/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack20
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/new java.lang.IllegalStateException/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/$stack20
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/ab#_70
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/ab#_70
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/ab#_66
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/ab#_66
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$u0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/this#_0
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@this
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void init(javax.servlet.ServletConfig)>/$stack2
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack1
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack6
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack9
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack1
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack6
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack9
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack2
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack12
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack14
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack2
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack12
[<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/new java.util.ArrayList/1	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/$stack14
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void init(javax.servlet.ServletConfig)>/new java.util.Date/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void init(javax.servlet.ServletConfig)>/$stack2
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack3
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack5
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack8
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack11
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack14
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack17
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack20
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack23
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack26
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack29
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/$stack32
[<<immutable-hcontext>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/new int[]/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/new java.lang.Integer/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/new java.math.BigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/new java.lang.Integer/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/$stack4
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/new java.lang.Integer/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/new java.lang.Integer/1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/l2#_1665
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/new java.lang.Integer/1	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/$stack8
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/new java.lang.Integer/1	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/l2#_1665
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new java.lang.annotation.Annotation[]/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack2
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/$stack3
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/$stack0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/this#_0
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@this
[<<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesGet(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesGet(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesPost(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesPost(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void init(javax.servlet.FilterConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void init(javax.servlet.FilterConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void destroy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void destroy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void setSse(javax.ws.rs.sse.Sse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void setSse(javax.ws.rs.sse.Sse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void eventStreamCdi(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void eventStreamCdi(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: java.lang.String echoString(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: java.lang.String echoString(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getAllQuotes()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getAllQuotes()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: int getImpl()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: int getImpl()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack49
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack32
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getAllQuotes()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getAllQuotes()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack32
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack49
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeUserCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeUserCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setTradeUserCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setTradeUserCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getNewUserCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getNewUserCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setNewUserCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setNewUserCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLoginCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLoginCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSumLoginCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSumLoginCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLogoutCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLogoutCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSumLogoutCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSumLogoutCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getHoldingCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getHoldingCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setHoldingCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setHoldingCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getBuyOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getBuyOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setBuyOrderCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setBuyOrderCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSellOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSellOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSellOrderCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSellOrderCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getCancelledOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getCancelledOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setCancelledOrderCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setCancelledOrderCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOpenOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOpenOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setOpenOrderCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setOpenOrderCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getDeletedOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getDeletedOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setDeletedOrderCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setDeletedOrderCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setOrderCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setOrderCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeStockCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeStockCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setTradeStockCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setTradeStockCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeUserCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeUserCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getNewUserCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getNewUserCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLoginCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLoginCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLogoutCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLogoutCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getHoldingCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getHoldingCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getBuyOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getBuyOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSellOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSellOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getCancelledOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getCancelledOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOpenOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOpenOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getDeletedOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getDeletedOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOrderCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOrderCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/profile#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/profile#_250
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/profileData#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/profileData#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void print()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void print()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: int hashCode()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: int hashCode()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/profileData#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/profileData#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void print()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void print()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isBuy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isBuy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isSell()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isSell()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isOpen()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isOpen()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCancelled()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCancelled()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void cancel()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void cancel()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: int hashCode()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: int hashCode()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean equals(java.lang.Object)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean equals(java.lang.Object)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void print()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void print()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Collection getOrders()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Collection getOrders()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOrders(java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOrders(java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Collection getHoldings()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Collection getHoldings()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setHoldings(java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setHoldings(java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void logout()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void logout()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int hashCode()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int hashCode()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: boolean equals(java.lang.Object)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: boolean equals(java.lang.Object)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/account#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void print()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void print()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: int hashCode()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: int hashCode()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/quote#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void print()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void print()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: int hashCode()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: int hashCode()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: boolean equals(java.lang.Object)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: boolean equals(java.lang.Object)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/holding#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: int getImpl()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: int getImpl()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack49
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack32
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack32
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack49
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack5
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/$stack6
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/$stack4
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/$stack3
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack8
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/$stack9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack34
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack35
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void init(javax.servlet.FilterConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void init(javax.servlet.FilterConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void destroy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void destroy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack7
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack9
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void print()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void print()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: int getHitCount()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: int getHitCount()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void onEvent(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void onEvent(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: java.lang.String getMsg()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: java.lang.String getMsg()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletSimple: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject	[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/this$0#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack13
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int hello()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int hello()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack14
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int hello()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int hello()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: void destroy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: void destroy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: void init(javax.websocket.EndpointConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: void init(javax.websocket.EndpointConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent1(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent1(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent2(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent2(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: void destroy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: void destroy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: void init(javax.websocket.EndpointConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: void init(javax.websocket.EndpointConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: boolean willDecode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: boolean willDecode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onAllDataRead()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onAllDataRead()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onError(java.lang.Throwable)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onError(java.lang.Throwable)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: void destroy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: void destroy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: void init(javax.websocket.EndpointConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: void init(javax.websocket.EndpointConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: boolean willDecode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: boolean willDecode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: void init(javax.websocket.EndpointConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: void init(javax.websocket.EndpointConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: void destroy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: void destroy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.lang.Object)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.lang.Object)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextDestroyed(javax.servlet.ServletContextEvent)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextDestroyed(javax.servlet.ServletContextEvent)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/@parameter1
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/x1#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void destroy()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void destroy()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: java.lang.String getServletInfo()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: java.lang.String getServletInfo()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void init(javax.servlet.ServletConfig)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void init(javax.servlet.ServletConfig)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter8
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: boolean willDecode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void eventStreamCdi(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter7
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void onEvent(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: java.lang.String echoString(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesGet(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesPost(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: boolean willDecode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent1(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent2(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderStatus#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack27
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/$stack27
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/quoteID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isBuy()>/orderType#_276
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isSell()>/orderType#_284
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isOpen()>/orderStatus#_292
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/orderStatus#_300
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stack15
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCancelled()>/orderStatus#_309
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/$stack15
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/quoteID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/results#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/results#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/results_$$A_2#_93
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: java.lang.String getMsg()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/s#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/json#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: boolean willDecode(java.lang.String)>/json#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/l1#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void eventStreamCdi(java.lang.String)>/event#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stack24
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/$stack24
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stack11
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stack14
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/$stack21
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEvent: void onEvent(java.lang.String)>/event#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: java.lang.String echoString(java.lang.String)>/input#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack7
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack8
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack10
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack11
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/fullname#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/creditcard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: int hashCode()>/$stack2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: int hashCode()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/$stack5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/$stack8
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stack14
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stack16
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/$stack39
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/fullname#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/creditcard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesGet(java.lang.String)>/symbols#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesPost(java.lang.String)>/symbols#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/symbols#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/jsonText#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: boolean willDecode(java.lang.String)>/s#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/l1#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent1(java.lang.String)>/event#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent2(java.lang.String)>/event#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack12
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack15
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack18
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stack12
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stack15
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/$stack18
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: int hashCode()>/$stack2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: int hashCode()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/$stack5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/$stack8
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/$stack24
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/$stack27
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/orderStatus#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/$stack4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack12
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack15
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/$stack18
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack7
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack8
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack9
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack10
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/$stack11
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/fullname#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/creditcard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/symbols#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/$stack15
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/$stack4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/quoteID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/@parameter5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/fullname#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/creditcard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stack3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/$stack6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/$stack1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/jsonText#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/l1#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/json#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/l1#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/jsonText#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/orderType#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/jsonText#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/symbol#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/companyName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter1
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter2
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter3
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter4
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@parameter5
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/userID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/password#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/fullName#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/address#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/email#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/creditCard#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/@parameter6
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/@parameter0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.String::MockObject	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/profileID#_0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean equals(java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: boolean equals(java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: boolean equals(java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean equals(java.lang.Object)>/object#_0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: boolean equals(java.lang.Object)>/object#_0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: boolean equals(java.lang.Object)>/object#_0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/object#_0
[<<immutable-hcontext>>]	java.lang.Object::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/object#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTSIA(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTSIA(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setVolume(double)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setVolume(double)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopGainers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopGainers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopLosers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopLosers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setSummaryDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setSummaryDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setGainPercent(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setGainPercent(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void getOrder()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void getOrder()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void setOrderData(com.ibm.websphere.samples.daytrader.web.jsf.OrderData)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void setOrderData(com.ibm.websphere.samples.daytrader.web.jsf.OrderData)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject)>/jsonObject#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.TestJSONObject: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/message#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/l1#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getKey()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getKey()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getValue()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getValue()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/message#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/l1#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/$stack2
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void getAllQuotes()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void getAllQuotes()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setQuotes(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setQuotes(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getSymbols()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getSymbols()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject)>/@parameter0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.jaxrs.JAXRSSyncService: com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject echoObject(com.ibm.websphere.samples.daytrader.web.prims.jaxrs.XMLObject)>/xmlObject#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack43
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack80
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack81
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack82
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack92
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack95
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack97
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack103
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack112
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack115
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack116
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack54
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack26
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack43
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack47
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack80
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack81
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack82
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack92
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack95
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack97
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack103
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack112
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack115
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack116
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/$stack54
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSessionCreationDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSessionCreationDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCurrentTime(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCurrentTime(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setProfileID(java.lang.String)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setProfileID(java.lang.String)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAccountID(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAccountID(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCreationDate(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCreationDate(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLoginCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLoginCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setBalance(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setBalance(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setOpenBalance(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setOpenBalance(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setHoldingsTotal(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setHoldingsTotal(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSumOfCashHoldings(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSumOfCashHoldings(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setGain(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setGain(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setGainPercent(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setGainPercent(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setNumberHoldings(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setNumberHoldings(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setClosedOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setClosedOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLastLogin(java.util.Date)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLastLogin(java.util.Date)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLogoutCount(int)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLogoutCount(int)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAllOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAllOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setNumberOfOrders(java.lang.Integer)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setNumberOfOrders(java.lang.Integer)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void <init>()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void <init>()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void setTotalGainPercent(java.math.BigDecimal)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void setTotalGainPercent(java.math.BigDecimal)>/this#_0
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/@this
[<<immutable-hcontext>>]	com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder::MockObject	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/this#_0
