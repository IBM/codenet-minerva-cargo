[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	int
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/2	int
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/java.lang.Exception.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/2	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/4	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/5	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAccount/0	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAccount/0	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuote/0	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuantity/0	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction10	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getAccount/0	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuote/1	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getPrice/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/0	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/java.lang.StringBuilder.toString/2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/1	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/java.lang.StringBuilder.toString/3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/java.math.BigDecimal.setScale/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderFee/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/1	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFullName/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndAddress/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndEmail/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndCreditCard/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/2	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/2	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setOrderProcessingMode(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/0	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setWebInterface(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/1	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_USERS(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/5	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/6	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_QUOTES(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/7	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/8	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMarketSummaryInterval(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/4	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/11	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/12	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPrimIterations(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/5	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/14	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/15	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setListQuotePriceChangeFrequency(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/6	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/18	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/19	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/4	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setRunTimeMode(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/0	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setRunTimeMode(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/1	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setOrderProcessingMode(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setOrderProcessingMode(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_USERS(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/4	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_USERS(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/5	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_QUOTES(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/6	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_QUOTES(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/7	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPublishQuotePriceChange(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Boolean.parseBoolean/0	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPublishQuotePriceChange(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Boolean.parseBoolean/1	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setDisplayOrderAlerts(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Boolean.parseBoolean/2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setDisplayOrderAlerts(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Boolean.parseBoolean/3	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setWebInterface(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setWebInterface(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/9	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setListQuotePriceChangeFrequency(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/10	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setListQuotePriceChangeFrequency(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/11	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPrimIterations(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/12	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMarketSummaryInterval(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Integer.parseInt/13	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setLongRun(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/java.lang.Boolean.parseBoolean/4	boolean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountData/0	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	java.util.Collection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOpenDate/0	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getCompletionDate/0	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderType/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/1	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/1	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOpenDate/1	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getCompletionDate/1	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderType/1	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/1	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/1	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/new com.ibm.websphere.samples.daytrader.web.jsf.OrderData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderData: void <init>(java.lang.Integer,java.lang.String,java.util.Date,java.util.Date,java.math.BigDecimal,java.lang.String,double,java.lang.String,java.math.BigDecimal)>/assign/instruction10	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getPrice/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setNumberOfOrders(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/java.lang.Integer.valueOf/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setSummaryDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getSummaryDate/0	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTSIA(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setVolume(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getVolume/0	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setGainPercent(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getGainPercent/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getOpen/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getOpen/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/1]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/1	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.String.startsWith/0	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndNewUserID/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/7	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setBasis(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/java.math.BigDecimal.multiply/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setMarketValue(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/java.math.BigDecimal.multiply/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setGain(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/java.math.BigDecimal.subtract/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setHoldingID(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getHoldingID/0	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPurchaseDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchaseDate/0	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setQuoteID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuoteID/1	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuantity/2	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchasePrice/1	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/new com.ibm.websphere.samples.daytrader.web.jsf.HoldingData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.HoldingData: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/1	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void setTotalGainPercent(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.lang.String,java.util.Collection)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getClosedOrders/0	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.lang.String,java.util.Collection)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void print()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.toString/0	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/assign/instruction41	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void logout()>/assign/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/assign/instruction16	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction14	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction14	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction16	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction16	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/assign-cast/instruction7	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void setOrderData(com.ibm.websphere.samples.daytrader.web.jsf.OrderData)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void getOrder()>/assign-cast/instruction6	com.ibm.websphere.samples.daytrader.web.jsf.OrderData
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/assign-cast/instruction3	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign-cast/instruction12	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign-cast/instruction11	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign-cast/instruction24	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign-cast/instruction17	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign-cast/instruction12	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign-cast/instruction23	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void init(javax.servlet.ServletConfig)>/assign-cast/instruction8	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.lang.Object)>/assign-cast/instruction3	java.util.concurrent.CopyOnWriteArrayList
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSessionCreationDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign-cast/instruction138	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void init(javax.servlet.ServletConfig)>/assign-cast/instruction8	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/assign-cast/instruction23	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction15	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction125	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction67	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction2	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction10	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction12	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction27	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction29	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction88	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/assign/instruction36	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/invoke/instruction17	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void destroy()>/invoke/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/invoke/instruction23	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction61	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/invoke/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/assign/instruction2	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/assign/instruction10	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction5	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction36	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction67	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction80	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction32	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction34	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction40	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction36	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction74	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction28	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction30	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction15	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction29	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction36	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction2	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction13	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction18	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/invoke/instruction31	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/invoke/instruction50	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void cancel()>/invoke/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction23	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/invoke/instruction11	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction28	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction59	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction8	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction17	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction26	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction7	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/invoke/instruction51	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction28	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction12	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction45	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction75	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction114	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/invoke/instruction26	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/invoke/instruction29	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.http2.PingServletPush: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction36	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction37	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction76	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction77	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction119	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction147	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction195	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction233	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction288	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction29	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction64	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction128	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction188	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction27	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction42	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction72	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction40	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/invoke/instruction4	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextDestroyed(javax.servlet.ServletContextEvent)>/invoke/instruction4	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction81	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction32	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction38	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction30	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setClosedOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction21	com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAllOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction90	com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCurrentTime(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction140	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction42	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction81	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction87	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction37	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction81	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopGainers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/assign/instruction15	com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopLosers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/assign/instruction38	com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction26	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction38	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction72	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/invoke/instruction24	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction35	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction75	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/invoke/instruction13	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/invoke/instruction25	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction72	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/invoke/instruction74	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction15	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction71	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction5	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction11	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction24	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction35	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction75	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIEventAsync: void onAsyncEvent2(java.lang.String)>/invoke/instruction7	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction54	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesGet(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesPost(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction13	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction26	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction123	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction63	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction64	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction65	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction25	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction27	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction86	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/assign/instruction2	javax.servlet.http.WebConnection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/assign/instruction21	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction59	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/assign/instruction2	javax.servlet.http.WebConnection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction4	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction4	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction5	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction41	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction75	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction109	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction131	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction151	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction171	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction34	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction7	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction65	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction78	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction30	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction32	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction38	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction72	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction26	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction28	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction39	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction9	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction4	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction5	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction7	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction9	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction10	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction11	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction64	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction11	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction12	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction48	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction21	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	java.lang.Object
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	java.lang.Object
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction29	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction30	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction31	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction26	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction35	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction57	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction10	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction11	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction24	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction4	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction5	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/assign/instruction49	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction6	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction7	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction9	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2IncludeRcv: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction26	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction126	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction131	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction132	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction137	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction138	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction143	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction144	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction149	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction150	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction10	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction155	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction10	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction156	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction11	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction161	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction11	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction162	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletLargeContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction32	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction28	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction68	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction104	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction132	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction180	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction218	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction273	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction62	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction126	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction180	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction25	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction40	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction68	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction69	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction70	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction39	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction105	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction38	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingReentryServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction105	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction30	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction36	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction28	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet30Async: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction40	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction85	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction33	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction34	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction105	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction24	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction48	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction36	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction70	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.lang.String,java.util.Collection)>/assign/instruction1	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.util.Collection)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void printCollection(java.lang.String,java.util.Collection)>/assign/instruction2	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction33	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction73	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction7	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction70	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction72	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction2	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction5	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction6	java.util.Collection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/assign/instruction3	java.util.Collection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction6	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/assign/instruction6	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction69	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction33	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction73	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction52	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/invoke/instruction6	com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction14	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction34	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction5	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction18	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction43	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction4	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction7	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction9	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction14	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction18	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/assign/instruction20	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/assign/instruction4	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction4	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction9	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction14	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction19	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/assign/instruction11	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/assign/instruction6	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/assign/instruction11	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/assign/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/assign/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/assign/instruction4	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/assign/instruction9	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/assign/instruction12	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction28	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction32	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction36	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction53	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction57	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction61	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction4	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction15	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction20	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction26	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/assign/instruction28	float
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction7	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction9	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction8	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction32	int
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction33	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign/instruction11	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign/instruction14	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign/instruction16	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign/instruction18	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign/instruction20	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/assign/instruction22	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction15	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction44	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPublishQuotePriceChange(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction251	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPublishQuotePriceChange(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction254	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setLongRun(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction306	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setLongRun(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction309	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setDisplayOrderAlerts(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction323	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setDisplayOrderAlerts(boolean)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction326	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction9	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction9	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction8	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction8	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction14	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction13	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction11	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction11	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/assign/instruction19	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/assign/instruction21	float
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/assign/instruction7	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction13	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction14	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction24	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/new com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral/0]	<com.ibm.websphere.samples.daytrader.util.TradeRunTimeModeLiteral: void <init>(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction67	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction68	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction8	java.time.LocalDateTime
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/assign/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getHostname/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/return/instruction29	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getScenarioAction/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/return/instruction32	char
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getScenarioAction/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/return/instruction41	char
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getUserID()>/return/instruction8	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderFee/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/return/instruction9	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderFee/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/return/instruction11	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.nextUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/return/instruction26	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndAddress/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndAddress/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBalance/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndBalance()>/return/instruction2	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndCreditCard/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/return/instruction22	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndCreditCard/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/return/instruction22	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndEmail/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/return/instruction16	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndEmail/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/return/instruction16	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFullName/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/return/instruction14	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFullName/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/return/instruction14	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFloat/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/return/instruction8	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFloat/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/return/instruction8	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFloat/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/return/instruction8	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/3	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBigDecimal/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal rndBigDecimal(float)>/return/instruction10	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBoolean/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean rndBoolean()>/return/instruction3	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndNewUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/return/instruction14	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/return/instruction23	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/return/instruction23	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/return/instruction23	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndQuantity/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/return/instruction7	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndQuantity/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/return/instruction7	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndQuantity/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/return/instruction7	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndQuantity/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/return/instruction7	float
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbols/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/return/instruction31	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getNextUserIDFromDeck/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/return/instruction37	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getOrderProcessingModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingModeNames/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getOrderProcessingModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingModeNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getOrderProcessingModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterfaceNames/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getWebInterfaceNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterfaceNames/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getWebInterfaceNames()>/return/instruction2	java.lang.String[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_QUOTES/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_QUOTES()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_QUOTES/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_QUOTES()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getUpdateQuotePrices/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getUpdateQuotePrices()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getLongRun/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getLongRun()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getLongRun/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getLongRun()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getLongRun/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getLongRun()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPublishQuotePriceChange/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getPublishQuotePriceChange()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPublishQuotePriceChange/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getPublishQuotePriceChange()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPublishQuotePriceChange/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getPublishQuotePriceChange()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMarketSummaryInterval/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMarketSummaryInterval()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMarketSummaryInterval/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMarketSummaryInterval()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getOrderProcessingMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingMode/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getOrderProcessingMode()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterface/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getWebInterface()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterface/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getWebInterface()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getDisplayOrderAlerts/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getDisplayOrderAlerts()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getDisplayOrderAlerts/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getDisplayOrderAlerts()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getDisplayOrderAlerts/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getDisplayOrderAlerts()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getListQuotePriceChangeFrequency/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getListQuotePriceChangeFrequency()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getListQuotePriceChangeFrequency/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getListQuotePriceChangeFrequency()>/return/instruction2	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/com.ibm.websphere.samples.daytrader.util.MDBStats.getInstance/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.MDBStats: com.ibm.websphere.samples.daytrader.util.MDBStats getInstance()>/return/instruction7	com.ibm.websphere.samples.daytrader.util.MDBStats
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getRandomInstance/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/return/instruction25	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getRandomInstance/1	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/return/instruction25	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction7	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction7	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction7	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction14	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction14	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction14	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/com.ibm.websphere.samples.daytrader.util.Log.doTrace/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.Log: boolean doTrace()>/return/instruction4	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <clinit>()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getRandomInstance/0	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/return/instruction25	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setClosedOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction45	com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAllOrders(com.ibm.websphere.samples.daytrader.web.jsf.OrderData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction115	com.ibm.websphere.samples.daytrader.web.jsf.OrderData[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopGainers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/assign/instruction33	com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void setTopLosers(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/assign/instruction2	[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/assign/instruction58	com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction7	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction14	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void print()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.toString/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/return/instruction29	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void print()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.toString/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/return/instruction80	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getGainPercent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/return/instruction9	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getGainPercent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/return/instruction9	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopGainers/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopGainers/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopGainers/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopGainers/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/return/instruction3	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopGainers/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/return/instruction3	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopGainers/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopLosers/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopLosers/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopLosers/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopLosers/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/return/instruction3	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopLosers/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/return/instruction3	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTopLosers/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/return/instruction3	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getSummaryDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getSummaryDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/return/instruction3	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getSummaryDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/return/instruction3	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAccount/0	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAccount/0	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuote/0	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuantity/0	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getAccount/0	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuote/1	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getPrice/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/java.lang.StringBuilder.toString/2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/1	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/java.lang.StringBuilder.toString/3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/java.lang.StringBuilder.toString/0	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/java.math.BigDecimal.setScale/0	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderFee/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign-cast/instruction12	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign-cast/instruction11	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign-cast/instruction17	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction15	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction29	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction36	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/invoke/instruction50	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction23	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/invoke/instruction11	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction28	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction8	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction17	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction26	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction7	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/invoke/instruction51	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction39	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction64	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction48	java.lang.Throwable
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction21	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	java.lang.Object
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String,java.lang.Object,java.lang.Object)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	java.lang.Object
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction29	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction30	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction31	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction26	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction35	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction9	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction10	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction11	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction24	java.lang.Throwable
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction4	double
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/assign/instruction5	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/assign/instruction49	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction14	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction34	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction18	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/assign/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction28	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction32	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction36	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction53	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction57	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction61	boolean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction7	double
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction9	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction8	double
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction32	int
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction33	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderFee/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/return/instruction9	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderFee/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getOrderFee(java.lang.String)>/return/instruction11	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFloat/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/return/instruction8	float
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/return/instruction23	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/return/instruction23	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getUpdateQuotePrices/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getUpdateQuotePrices()>/return/instruction2	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getLongRun/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getLongRun()>/return/instruction2	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPublishQuotePriceChange/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getPublishQuotePriceChange()>/return/instruction2	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPublishQuotePriceChange/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getPublishQuotePriceChange()>/return/instruction2	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getMarketSummary/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/return/instruction4	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getMarketSummary/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/return/instruction4	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.buy/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/return/instruction59	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.buy/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/return/instruction59	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.sell/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.sell/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.sell/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/return/instruction92	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.sell/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/return/instruction92	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction100	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction100	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction100	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction100	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction100	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction100	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getClosedOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/return/instruction46	java.util.List
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getClosedOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/return/instruction46	java.util.List
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction19	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction19	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAllQuotes/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getAllQuotes()>/return/instruction5	java.util.List
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAllQuotes/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getAllQuotes()>/return/instruction5	java.util.List
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction50	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction50	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction50	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction50	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.updateQuotePriceVolume/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction50	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction50	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction23	java.util.List
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction23	java.util.List
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction23	java.util.List
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction23	java.util.List
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHolding/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHolding/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction6	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateAccountProfile/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/return/instruction19	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateAccountProfile/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/return/instruction19	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.login/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/return/instruction33	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.login/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/return/instruction33	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.register/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction23	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.register/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction23	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.register/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction42	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.register/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction42	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction32	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.createHolding/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/return/instruction14	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean.createHolding/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/return/instruction14	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.investmentReturn/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/return/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.investmentReturn/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/return/instruction6	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.pingTwoPhase/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/return/instruction54	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.pingTwoPhase/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/return/instruction54	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.toString/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/return/instruction37	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getAccountID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getAccountID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getAccountID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getAccountID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLoginCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLoginCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLoginCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/return/instruction3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLoginCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLogoutCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLogoutCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void logout()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLogoutCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/return/instruction3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLogoutCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLastLogin/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLastLogin/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/return/instruction3	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLastLogin/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getCreationDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getCreationDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/return/instruction3	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getCreationDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getBalance/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getBalance/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getBalance/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getOpenBalance/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getOpenBalance/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getOpenBalance/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getProfileID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getProfileID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getProfileID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getProfile/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/return/instruction3	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction71	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ExplicitGC: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction69	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction3	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction4	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/assign/instruction6	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/assign/instruction5	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/assign/instruction4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/assign/instruction3	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/assign/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/assign/instruction2	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction2	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void logout(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction4	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction7	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/assign/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction9	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/invoke/instruction9	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction8	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction8	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/invoke/instruction14	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/invoke/instruction13	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void queueOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void cancelOrder(java.lang.Integer,boolean)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void orderCompleted(java.lang.String,java.lang.Integer)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/invoke/instruction4	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/invoke/instruction7	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/invoke/instruction6	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void logout(java.lang.String)>/invoke/instruction5	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction11	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: void setInSession(boolean)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/invoke/instruction11	boolean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getMarketSummary/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/return/instruction7	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getMarketSummary/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getMarketSummary()>/return/instruction7	com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction12	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/return/instruction12	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.buy/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/return/instruction15	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.buy/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/return/instruction15	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.sell/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/return/instruction14	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.sell/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/return/instruction14	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.completeOrder/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean completeOrder(java.lang.Integer,boolean)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.OrderDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean.completeOrderAsync/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.concurrent.Future completeOrderAsync(java.lang.Integer,boolean)>/return/instruction7	java.util.concurrent.Future
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getClosedOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getClosedOrders/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getClosedOrders(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction10	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.createQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction10	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getQuote/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAllQuotes/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/return/instruction7	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAllQuotes/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getAllQuotes()>/return/instruction7	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction10	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateQuotePriceVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean updateQuotePriceVolume(java.lang.String,java.math.BigDecimal,double)>/return/instruction10	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHoldings/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/return/instruction8	java.util.Collection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHolding/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getHolding/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding(java.lang.Integer)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccountData(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.getAccountProfileData/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateAccountProfile/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.updateAccountProfile/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/return/instruction8	com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.login/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.login/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean login(java.lang.String,java.lang.String)>/return/instruction9	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.register/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction14	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/com.ibm.websphere.samples.daytrader.interfaces.TradeServices.register/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/return/instruction14	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.toString/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/return/instruction41	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderType/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderType/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isBuy()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderType/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isSell()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderType/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderType/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isOpen()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCompleted()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean isCancelled()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderStatus/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOpenDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOpenDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/return/instruction3	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOpenDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getCompletionDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getCompletionDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/return/instruction3	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getCompletionDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getQuantity/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/return/instruction6	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/return/instruction6	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/return/instruction8	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/return/instruction8	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/return/instruction8	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction15	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction125	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction13	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction26	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction123	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction35	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction75	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction33	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction73	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction67	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction63	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction64	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction65	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31Async: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: java.lang.Object decode(java.lang.String)>/com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder.decode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonDecoder: com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage decode(java.lang.String)>/return/instruction14	com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction32	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction30	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction36	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2JNDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getTradeUserCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeUserCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getNewUserCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getNewUserCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getSumLoginCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLoginCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getSumLogoutCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLogoutCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getHoldingCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getHoldingCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getBuyOrderCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getBuyOrderCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getSellOrderCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSellOrderCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getCancelledOrderCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getCancelledOrderCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getOpenOrderCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOpenOrderCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getDeletedOrderCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getDeletedOrderCount()>/return/instruction3	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean.getOrderCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOrderCount()>/return/instruction3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction42	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction40	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction43	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction14	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction14	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: double investmentReturn(double,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction16	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: double investmentReturn(double,double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction16	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction81	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction87	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction85	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction59	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction57	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2PDF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction27	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction25	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2ServletRcv::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.toString/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/return/instruction29	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getPassword/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void login(java.lang.String)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getPassword/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getPassword/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getPassword/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getPassword/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getPassword/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getPassword/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getFullName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getFullName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getFullName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getFullName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getFullName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAddress/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAddress/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAddress/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAddress/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getAddress/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getEmail/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getEmail/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getEmail/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getEmail/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getEmail/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getCreditCard/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getCreditCard/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getCreditCard/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean updateAccountProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getCreditCard/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean.getCreditCard/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction72	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction7	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession1::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction70	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage.getKey/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getKey()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage.getKey/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getKey()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage.getValue/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getValue()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage.getValue/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage: java.lang.String getValue()>/return/instruction3	java.lang.String
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getOpen/0	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	java.lang.String
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getHigh/0	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getLow/0	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getCompanyName/0	java.lang.String
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/java.lang.Double.valueOf/0	java.lang.Double
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction9	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/java.lang.Double.valueOf/1	java.lang.Double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/java.lang.Exception.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/assign-cast/instruction20	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/invoke/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setQuotes(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/assign/instruction32	com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void getAllQuotes()>/com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.getQuotesBySymbols/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/return/instruction65	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.getSymbols/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getSymbols()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF.getSymbols/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getSymbols()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setQuotes(com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[])>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/assign/instruction53	com.ibm.websphere.samples.daytrader.web.jsf.QuoteData[]
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction30	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction28	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Jsp::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction52	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction53	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/invoke/instruction59	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/invoke/instruction60	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/invoke/instruction61	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/invoke/instruction46	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction35	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction23	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction44	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void log(java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction45	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction63	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction64	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction65	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/invoke/instruction23	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/invoke/instruction24	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/invoke/instruction25	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/invoke/instruction36	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/invoke/instruction37	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction62	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction63	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/invoke/instruction64	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/invoke/instruction19	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/invoke/instruction20	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/invoke/instruction21	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction38	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction8	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction9	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction10	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction11	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction48	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction75	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction76	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction21	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction19	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction38	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction51	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction11	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction28	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction47	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction17	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction2	javax.servlet.ServletContext
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.String,java.lang.Throwable)>/assign/instruction3	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void requestDispatch(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/invoke/instruction11	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction31	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction49	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction31	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction64	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction32	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction71	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction87	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction61	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction40	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction59	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction28	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction29	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction53	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction39	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction9	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction10	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getLongRun/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getLongRun()>/return/instruction2	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingMode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getOrderProcessingMode()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingMode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getOrderProcessingMode()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setProfileID(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getProfileID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setAccountID(java.lang.Integer)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getAccountID/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setCreationDate(java.util.Date)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getCreationDate/0	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLoginCount(int)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLoginCount/0	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLogoutCount(int)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLogoutCount/0	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setLastLogin(java.util.Date)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getLastLogin/0	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setOpenBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getOpenBalance/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.entities.AccountDataBean.getBalance/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setNumberHoldings(java.lang.Integer)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/java.lang.Integer.valueOf/0	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setHoldingsTotal(java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeHoldingsTotal/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSumOfCashHoldings(java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/java.math.BigDecimal.add/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setGain(java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGain/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setGainPercent(java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeHoldingsTotal(java.util.Collection)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction3	java.util.Collection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGain(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction29	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGain(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction30	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction33	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction34	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGain/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGain(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction6	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction7	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction14	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeHoldingsTotal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeHoldingsTotal(java.util.Collection)>/return/instruction8	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeHoldingsTotal/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeHoldingsTotal(java.util.Collection)>/return/instruction25	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction29	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction27	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction8	java.time.LocalDateTime
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean.getHitCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/return/instruction10	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean.getHitCount/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/return/instruction10	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean.hitList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/return/instruction3	java.util.List
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean.hitList/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/return/instruction3	java.util.List
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getOrders(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction88	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction86	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getNextUserIDFromDeck/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/return/instruction37	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2Many::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getAccountProfileData(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction61	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction59	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getNextUserIDFromDeck/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/return/instruction37	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2CMROne2One::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/java.lang.Exception.toString/0	java.lang.String
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead$ReadListenerImpl: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead,javax.servlet.ServletInputStream,javax.servlet.http.HttpServletResponse,javax.servlet.AsyncContext)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet31AsyncRead: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.toString/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/return/instruction25	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getHoldingID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getHoldingID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getHoldingID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuantity/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuantity/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuantity/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchasePrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchasePrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchasePrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchaseDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchaseDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/return/instruction3	java.util.Date
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getPurchaseDate/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/return/instruction3	java.util.Date
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuoteID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/return/instruction6	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuoteID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuoteID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/return/instruction6	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuoteID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/return/instruction8	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuoteID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/return/instruction8	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.HoldingDataBean.getQuoteID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/return/instruction8	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction28	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction26	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void debug(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction36	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TestServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction34	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign-cast/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction12	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction45	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction75	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction114	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/invoke/instruction26	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void pushHeaderImages(javax.servlet.http.PushBuilder)>/invoke/instruction29	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction2	javax.servlet.http.HttpServletRequest
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccount(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doBuy(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doHome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogin(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doLogout(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doPortfolio(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doQuotes(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doRegister(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doSell(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.Integer)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doWelcome(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doMarketSummary(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction3	javax.servlet.http.HttpServletResponse
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction126	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction131	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction132	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction137	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction138	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction143	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction8	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction144	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction9	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction149	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction9	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction150	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction10	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction155	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction10	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction156	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction11	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction161	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction11	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction162	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterface/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeAppServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getWebInterface()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction11	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction24	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean.hello/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int hello()>/return/instruction5	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean.getBeanMangerViaJNDI/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/return/instruction14	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaJNDI: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean.getBeanMangerViaJNDI/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaJNDI()>/return/instruction16	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean.getBeanMangerViaCDICurrent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/return/instruction11	int
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingServletCDIBeanManagerViaCDICurrent: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean.getBeanMangerViaCDICurrent/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIBean: int getBeanMangerViaCDICurrent()>/return/instruction13	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean pingTwoPhase(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction35	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction75	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction33	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction73	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2TwoPhase::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingManagedExecutor
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction72	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction68	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction69	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction70	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/assign/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFloat/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndFloat(int)>/return/instruction8	float
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRandomPriceChangeFactor/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.math.BigDecimal getRandomPriceChangeFactor()>/return/instruction23	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCWrite::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction54	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletSetContentLength: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction52	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: java.util.Collection getHoldings(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction39	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction105	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getNextUserIDFromDeck/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/return/instruction37	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2EntityCollection::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: java.lang.Object decode(java.lang.String)>/com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder.decode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/return/instruction16	com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction37	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction33	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction34	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJDBCRead2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction40	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction38	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObjectFactory::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void print()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.toString/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/return/instruction37	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getCompanyName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getCompanyName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getCompanyName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/return/instruction3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getCompanyName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/return/instruction3	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getPrice/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getOpen/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getOpen/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getOpen/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getOpen/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getLow/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getLow/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getLow/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getLow/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getHigh/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getHigh/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getHigh/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getHigh/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getChange/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getChange/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getChange/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: void publishQuotePriceChange(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,java.math.BigDecimal,java.math.BigDecimal,double)>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toHTML()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String toString()>/com.ibm.websphere.samples.daytrader.entities.QuoteDataBean.getVolume/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/return/instruction3	double
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(java.lang.Object)>/com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder.encode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.JsonEncoder: java.lang.String encode(com.ibm.websphere.samples.daytrader.web.websocket.JsonMessage)>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction81	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction105	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBQueue::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction67	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction80	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction7	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction65	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction78	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingSession2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction81	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction107	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction105	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2MDBTopic::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.String.startsWith/0	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndNewUserID/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/7	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/assign/instruction16	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/invoke/instruction23	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction26	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/assign/instruction21	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction24	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction48	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/assign/instruction4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction9	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction14	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/assign/instruction19	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/assign/instruction11	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/assign/instruction11	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/assign/instruction3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/assign/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getHostname/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getHostname()>/return/instruction29	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getScenarioAction/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/return/instruction32	char
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getScenarioAction/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/return/instruction41	char
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getUserID()>/return/instruction8	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.nextUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String nextUserID()>/return/instruction26	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndAddress/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/return/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndBalance/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndBalance()>/return/instruction2	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndCreditCard/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/return/instruction22	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndEmail/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/return/instruction16	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndFullName/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/return/instruction14	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndAddress()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndCreditCard()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndEmail(java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndFullName()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndNewUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndNewUserID()>/return/instruction14	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndQuantity/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: float rndQuantity()>/return/instruction7	float
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbols/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbols()>/return/instruction31	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndUserID/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/return/instruction9	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndUserID()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getNextUserIDFromDeck/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/return/instruction37	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getNextUserIDFromDeck()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeScenarioServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction32	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction30	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setOrderProcessingMode(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/0	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setWebInterface(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/1	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/3	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_USERS(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/5	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMAX_QUOTES(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/3	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/7	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/8	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setMarketSummaryInterval(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/4	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/11	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/12	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPrimIterations(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/5	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/14	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/15	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setListQuotePriceChangeFrequency(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.Integer.parseInt/6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/18	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/19	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction36	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction37	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction76	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction77	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction119	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction147	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction195	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction233	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction288	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction32	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction28	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction68	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction104	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction132	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction180	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction218	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction273	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction15	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/assign/instruction44	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPublishQuotePriceChange(boolean)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction251	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setPublishQuotePriceChange(boolean)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction254	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setLongRun(boolean)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction306	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setLongRun(boolean)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction309	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setDisplayOrderAlerts(boolean)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction323	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setDisplayOrderAlerts(boolean)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction326	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigDisplay(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doResetTrade(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPage/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/return/instruction6	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeModeNames/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getRunTimeModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingModeNames/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getOrderProcessingModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingModeNames/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getOrderProcessingModeNames()>/return/instruction2	java.lang.String[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterfaceNames/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getWebInterfaceNames()>/return/instruction2	java.lang.String[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterfaceNames/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String[] getWebInterfaceNames()>/return/instruction2	java.lang.String[]
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_USERS/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_USERS()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_QUOTES/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_QUOTES()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMAX_QUOTES/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMAX_QUOTES()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getLongRun/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getLongRun()>/return/instruction2	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPublishQuotePriceChange/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getPublishQuotePriceChange()>/return/instruction2	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMarketSummaryInterval/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMarketSummaryInterval()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getMarketSummaryInterval/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getMarketSummaryInterval()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getRunTimeMode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getRunTimeMode()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getOrderProcessingMode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getOrderProcessingMode()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getWebInterface/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getWebInterface()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getDisplayOrderAlerts/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: boolean getDisplayOrderAlerts()>/return/instruction2	boolean
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getListQuotePriceChangeFrequency/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getListQuotePriceChangeFrequency()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getListQuotePriceChangeFrequency/1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getListQuotePriceChangeFrequency()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction38	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction36	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPObject::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesGet(java.lang.String)>/com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource.getQuotes/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/return/instruction28	java.util.ArrayList
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List quotesPost(java.lang.String)>/com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource.getQuotes/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource::MockObject]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/return/instruction28	java.util.ArrayList
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction34	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction40	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction32	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction38	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity2JSP::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction27	java.lang.String
[com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread$1: void <init>(com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread,javax.servlet.ServletOutputStream,javax.servlet.AsyncContext)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction1	com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction25	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingManagedThread::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.lang.Object)>/com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder.encode/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder::MockObject]	<com.ibm.websphere.samples.daytrader.web.websocket.QuotePriceChangeListEncoder: java.lang.String encode(java.util.concurrent.CopyOnWriteArrayList)>/return/instruction53	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/assign/instruction6	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction36	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction74	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction72	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.random/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: double random()>/return/instruction3	double
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndInt/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int rndInt(int)>/return/instruction8	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.rndSymbol/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String rndSymbol()>/return/instruction10	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Entity::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction28	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction26	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServletWriter::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction72	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction70	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction42	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction40	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.util.TradeConfig.getPrimIterations/0	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Include::MockObject]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: int getPrimIterations()>/return/instruction2	int
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingBean/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/invoke/instruction30	java.lang.String
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction28	java.lang.Throwable
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2Servlet::MockObject]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.Throwable,java.lang.String)>/assign/instruction1	java.lang.Throwable
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1.formatConstraintViolations/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/return/instruction39	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction9	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.Integer,java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction10	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	int
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	int
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(java.lang.Integer,int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction9	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Handler: void init(javax.servlet.http.WebConnection)>/new com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection,com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$1)>/assign/instruction2	javax.servlet.http.WebConnection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction6	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction7	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction8	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction9	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction2	java.lang.Integer
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction3	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction4	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(java.lang.Integer,double,java.math.BigDecimal,java.util.Date,java.lang.String)>/assign/instruction6	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	int
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	int
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction15	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction2	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction3	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction4	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction5	java.util.Collection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction6	java.util.Collection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction7	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction14	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getTSIA/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean.getOpenTSIA/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction4	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction5	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction6	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction7	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction8	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction9	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction10	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction11	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction4	java.util.Date
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction5	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1.formatConstraintViolations/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/return/instruction39	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction6	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction7	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction8	java.math.BigDecimal
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction9	double
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/com.ibm.websphere.samples.daytrader.util.Log.doTrace/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: boolean doTrace()>/return/instruction4	boolean
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect.getConn/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/return/instruction34	java.sql.Connection
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect.getConnPublic/0	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/return/instruction3	java.sql.Connection
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction37	java.lang.Throwable
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction3	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction4	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction5	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction6	double
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction7	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction8	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction9	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction10	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date,double,java.math.BigDecimal,java.math.BigDecimal,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction11	com.ibm.websphere.samples.daytrader.entities.HoldingDataBean
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/return/instruction3	java.math.BigDecimal
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean buy(java.lang.String,java.lang.String,double,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/return/instruction3	java.math.BigDecimal
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderFee/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/return/instruction3	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	double
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction4	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction5	com.ibm.websphere.samples.daytrader.entities.AccountDataBean
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean createHolding(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,double,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.HoldingDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void <init>(double,java.math.BigDecimal,java.util.Date,com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction6	com.ibm.websphere.samples.daytrader.entities.QuoteDataBean
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGain(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction2	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction2	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGain(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction3	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/assign/instruction1	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/assign/instruction3	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGain/0	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGain(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction6	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction7	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteData: void <init>(java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.math.BigDecimal,java.math.BigDecimal,java.lang.String,java.lang.Double,java.lang.Double)>/com.ibm.websphere.samples.daytrader.util.FinancialUtils.computeGainPercent/0	[com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject, <com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/new com.ibm.websphere.samples.daytrader.web.jsf.QuoteData/0]	<com.ibm.websphere.samples.daytrader.util.FinancialUtils: java.math.BigDecimal computeGainPercent(java.math.BigDecimal,java.math.BigDecimal)>/return/instruction14	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1.formatConstraintViolations/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/return/instruction39	java.lang.String
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction1	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/java.lang.StringBuilder.toString/0	java.lang.String
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/java.lang.StringBuilder.toString/1	java.lang.String
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String)>/assign/instruction1	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/java.lang.StringBuilder.toString/0	java.lang.String
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.util.Log: void error(java.lang.String,java.lang.Throwable)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction37	java.lang.Throwable
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: void trace(java.lang.String)>/assign/instruction1	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/java.lang.StringBuilder.toString/0	java.lang.String
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/com.ibm.websphere.samples.daytrader.util.Log.doTrace/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.util.Log: boolean doTrace()>/return/instruction4	boolean
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect.getConn/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/return/instruction34	java.sql.Connection
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect.getConnPublic/0	[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConnPublic()>/return/instruction3	java.sql.Connection
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1.formatConstraintViolations/0	[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: java.lang.String formatConstraintViolations(java.util.Set)>/return/instruction39	java.lang.String
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean::MockObject]	<com.ibm.websphere.samples.daytrader.impl.session2direct.DirectSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/com.ibm.websphere.samples.daytrader.entities.OrderDataBean.getOrderID/0	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean sell(java.lang.String,java.lang.Integer,int)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/return/instruction3	java.lang.Integer
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction2	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction3	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction4	double
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction5	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction6	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction7	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction8	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean createQuote(java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.QuoteDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void <init>(java.lang.String,java.lang.String,double,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,java.math.BigDecimal,double)>/assign/instruction9	double
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	java.lang.String
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction2	int
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction3	int
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction4	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction5	java.util.Date
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction6	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction7	java.math.BigDecimal
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>/new com.ibm.websphere.samples.daytrader.entities.AccountDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void <init>(int,int,java.util.Date,java.util.Date,java.math.BigDecimal,java.math.BigDecimal,java.lang.String)>/assign/instruction8	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction2	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction3	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction4	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction5	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction6	java.lang.String
[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/assign/instruction2	[com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction::MockObject, <com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void doAccountUpdate(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/assign/instruction7	java.lang.String
