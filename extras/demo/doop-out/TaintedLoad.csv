[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction14
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/assign/instruction38
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction24
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction14
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/assign/instruction38
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction24
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.jsf.TradeAppJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction14
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void boostrapTradeServices()>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.websocket.MarketSummaryWebSocket: void <init>(javax.enterprise.inject.Instance)>/assign/instruction12
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.servlet.TradeServletAction: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.impl.ejb3.AsyncScheduledOrder: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/assign/instruction38
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction24
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.jsf.OrderDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction13	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction32
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction13	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction51
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction13	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction51
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction13	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/assign/instruction63
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction15	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction32
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction15	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction51
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction15	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction51
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction15	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/assign/instruction63
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction17	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction32
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction17	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction51
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction17	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction51
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction17	<com.ibm.websphere.samples.daytrader.web.servlet.TradeWebContextListener: void contextInitialized(javax.servlet.ServletContextEvent)>/assign/instruction63
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction23	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction66
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction23	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction85
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction25	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction66
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction25	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction85
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction31	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction100
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction31	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction119
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction31	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction91
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction33	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction100
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction33	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction119
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction33	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction91
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction35	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction100
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction35	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void setConfigParam(java.lang.String,java.lang.String)>/assign/instruction119
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction35	<com.ibm.websphere.samples.daytrader.web.servlet.TradeConfigServlet: void doConfigUpdate(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction91
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction120	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction120	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction122	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction122	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction124	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction124	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction126	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction126	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction128	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction128	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction130	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction130	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction132	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction132	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction134	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction134	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction136	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction136	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction138	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction138	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction139	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction6
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction139	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction15
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction142	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction142	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction144	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction144	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction146	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction146	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction148	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction148	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction150	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction150	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction152	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction152	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction154	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction154	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction156	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction156	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction158	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction158	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction160	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction160	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction16
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction161	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction6
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction161	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction15
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction165	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction165	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction167	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction167	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction169	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction169	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction171	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction171	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction173	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction173	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction175	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction175	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction177	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction177	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction179	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction179	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction181	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction181	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction183	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction183	<com.ibm.websphere.samples.daytrader.util.TradeConfig: char getScenarioAction(boolean)>/assign/instruction40
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction190	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction192	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction194	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction196	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction198	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction200	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction202	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction204	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction206	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction208	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction209	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction4
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction212	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction214	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction216	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction218	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction220	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction222	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction224	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction226	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction228	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction230	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction231	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction4
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction234	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction236	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction238	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction240	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction242	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction244	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction246	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction248	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction250	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction252	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.util.TradeConfig: void <clinit>()>/assign/instruction253	<com.ibm.websphere.samples.daytrader.util.TradeConfig: java.lang.String getPage(int)>/assign/instruction4
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction9	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction19	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction32	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction45	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction58	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction71	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction84	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction97	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction110	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming$1: void <clinit>()>/assign/instruction123	<com.ibm.websphere.samples.daytrader.web.prims.PingJSONPStreaming: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction35
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: int hashCode()>/assign/instruction3
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: int hashCode()>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean equals(java.lang.Object)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean equals(java.lang.Object)>/assign/instruction11
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: boolean equals(java.lang.Object)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/assign/instruction4
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setHolding(com.ibm.websphere.samples.daytrader.entities.HoldingDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: com.ibm.websphere.samples.daytrader.entities.HoldingDataBean getHolding()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: int hashCode()>/assign/instruction3
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: int hashCode()>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: boolean equals(java.lang.Object)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: boolean equals(java.lang.Object)>/assign/instruction11
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: boolean equals(java.lang.Object)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/assign/instruction4
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: com.ibm.websphere.samples.daytrader.entities.QuoteDataBean getQuote()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction6
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction9
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction26
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction28
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction8	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction10	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction6
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction10	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction9
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction12	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction26
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction12	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void onDataAvailable()>/assign/instruction28
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void init(javax.servlet.FilterConfig)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void destroy()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.JSFLoginFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void <init>(javax.enterprise.inject.Instance)>/assign/instruction14	<com.ibm.websphere.samples.daytrader.web.servlet.TestServlet: void performTask(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: void setMsg(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.prims.PingBean: java.lang.String getMsg()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void setSse(javax.ws.rs.sse.Sse)>/assign/instruction4	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void setSse(javax.ws.rs.sse.Sse)>/assign/instruction4	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void eventStreamCdi(java.lang.String)>/assign/instruction3
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void setSse(javax.ws.rs.sse.Sse)>/assign/instruction6	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/assign/instruction6
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void setSse(javax.ws.rs.sse.Sse)>/assign/instruction6	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void register(javax.ws.rs.sse.SseEventSink)>/assign/instruction14
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void setSse(javax.ws.rs.sse.Sse)>/assign/instruction6	<com.ibm.websphere.samples.daytrader.jaxrs.BroadcastResource: void eventStreamCdi(java.lang.String)>/assign/instruction4
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setTradeUserCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeUserCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setNewUserCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getNewUserCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSumLoginCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLoginCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSumLogoutCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSumLogoutCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setHoldingCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getHoldingCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setBuyOrderCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getBuyOrderCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setSellOrderCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getSellOrderCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setCancelledOrderCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getCancelledOrderCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setOpenOrderCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOpenOrderCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setDeletedOrderCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getDeletedOrderCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setOrderCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getOrderCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: void setTradeStockCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.RunStatsDataBean: int getTradeStockCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int hashCode()>/assign/instruction3
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int hashCode()>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: boolean equals(java.lang.Object)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: boolean equals(java.lang.Object)>/assign/instruction11
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: boolean equals(java.lang.Object)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOrders(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Collection getOrders()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setHoldings(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Collection getHoldings()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfile(com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean getProfile()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction20	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction20	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction9
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction20	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction20	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void home()>/assign/instruction79
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/assign/instruction8	<com.ibm.websphere.samples.daytrader.mdb.DTBroker3MDB: void <init>()>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: int hashCode()>/assign/instruction3
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: int hashCode()>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/assign/instruction11
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: boolean equals(java.lang.Object)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/assign/instruction20	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/assign/instruction22
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/assign/instruction20	<com.ibm.websphere.samples.daytrader.web.prims.ejb3.PingServlet2Session2Entity: void init(javax.servlet.ServletConfig)>/assign/instruction10
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: int getHitCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: int getHitCount()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.web.prims.cdi.PingCDIJSFBean: int getHitCount()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction16	<com.ibm.websphere.samples.daytrader.web.jsf.MarketSummaryJSF: void getMarketSummary()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: int getHitCount(java.time.LocalDateTime)>/assign/instruction3
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: void <init>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.beanval.CDIMethodConstraintBean: java.util.List hitList()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction7	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction43
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction11	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction39
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction11	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction67
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction15	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction36
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction15	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction68
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction30	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction7
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void <init>(javax.enterprise.inject.Instance)>/assign/instruction30	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction23
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction18	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction64
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction38	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction36
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction38	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction68
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction41	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction39
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction41	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction67
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction45	<com.ibm.websphere.samples.daytrader.web.jsf.PortfolioJSF: void getPortfolio()>/assign/instruction43
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction9	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction9	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction22	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void <init>(java.math.BigDecimal,java.math.BigDecimal,double,java.util.Collection,java.util.Collection)>/assign/instruction22	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/assign/instruction101
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/assign/instruction104
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/assign/instruction4
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/assign/instruction53
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: javax.json.JsonObject toJSON()>/assign/instruction107
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: void <init>(javax.enterprise.inject.Instance)>/assign/instruction14	<com.ibm.websphere.samples.daytrader.jaxrs.QuoteResource: java.util.List getQuotes(java.lang.String)>/assign/instruction15
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void <init>(javax.enterprise.inject.Instance)>/assign/instruction16	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction33
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void init(javax.servlet.FilterConfig)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void destroy()>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.servlet.OrdersAlertFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: int hashCode()>/assign/instruction3
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: int hashCode()>/assign/instruction5
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/assign/instruction8
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/assign/instruction11
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: boolean equals(java.lang.Object)>/assign/instruction13
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/assign/instruction2
[<<immutable-context>>, <<immutable-context>>]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAccount(com.ibm.websphere.samples.daytrader.entities.AccountDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: com.ibm.websphere.samples.daytrader.entities.AccountDataBean getAccount()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction7	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getGainPercent()>/assign/instruction8
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setVolume(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: double getVolume()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopGainers(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopGainers()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTopLosers(java.util.Collection)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Collection getTopLosers()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setSummaryDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.util.Date getSummaryDate()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setAccountID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.Integer getAccountID()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLoginCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLoginCount()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLogoutCount(int)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: int getLogoutCount()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setLastLogin(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getLastLogin()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setCreationDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.util.Date getCreationDate()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setBalance(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getBalance()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setOpenBalance(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.math.BigDecimal getOpenBalance()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: void setProfileID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountDataBean: java.lang.String getProfileID()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.Integer getOrderID()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderType(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderType()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderStatus(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getOrderStatus()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOpenDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getOpenDate()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setCompletionDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.util.Date getCompletionDate()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuantity(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: double getQuantity()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getPrice()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/assign/instruction7
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.OrderDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.lang.String getSymbol()>/assign/instruction4
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setUserID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getUserID()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setPassword(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getPassword()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setFullName(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getFullName()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setAddress(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getAddress()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setEmail(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getEmail()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: void setCreditCard(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.AccountProfileDataBean: java.lang.String getCreditCard()>/assign/instruction2
[com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean::MockObject, <com.ibm.websphere.samples.daytrader.impl.ejb3.TradeSLSBBean: com.ibm.websphere.samples.daytrader.entities.OrderDataBean createOrder(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,com.ibm.websphere.samples.daytrader.entities.QuoteDataBean,com.ibm.websphere.samples.daytrader.entities.HoldingDataBean,java.lang.String,double)>/new com.ibm.websphere.samples.daytrader.entities.OrderDataBean/0]	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: void setOrderFee(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.OrderDataBean: java.math.BigDecimal getOrderFee()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setHoldingID(java.lang.Integer)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.Integer getHoldingID()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuantity(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: double getQuantity()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchasePrice(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.math.BigDecimal getPurchasePrice()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setPurchaseDate(java.util.Date)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.util.Date getPurchaseDate()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuoteID(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/assign/instruction7
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.HoldingDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: void setQuote(com.ibm.websphere.samples.daytrader.entities.QuoteDataBean)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.HoldingDataBean: java.lang.String getQuoteID()>/assign/instruction4
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setSymbol(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getSymbol()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setCompanyName(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.lang.String getCompanyName()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setPrice(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getPrice()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setOpen(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getOpen()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setLow(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getLow()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setHigh(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: java.math.BigDecimal getHigh()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setChange(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getChange()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.entities.QuoteDataBean::MockObject]	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: void setVolume(double)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.entities.QuoteDataBean: double getVolume()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/assign/instruction5
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/assign/instruction15
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getQuotesBySymbols()>/assign/instruction27
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: void setSymbols(java.lang.String)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.QuoteJSF: java.lang.String getSymbols()>/assign/instruction2
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setBalance(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction25
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setOpenBalance(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction30
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setOpenBalance(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction34
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setHoldingsTotal(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction26
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSumOfCashHoldings(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction29
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF::MockObject]	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void setSumOfCashHoldings(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.web.jsf.AccountDataJSF: void doAccountData(com.ibm.websphere.samples.daytrader.entities.AccountDataBean,java.util.Collection)>/assign/instruction33
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/assign/instruction32	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/assign/instruction6
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction15
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction19
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction8	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction23
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction8	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction26
[<<immutable-hcontext>>, com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener::MockObject]	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void <init>(javax.servlet.http.WebConnection)>/assign/instruction8	<com.ibm.websphere.samples.daytrader.web.prims.PingUpgradeServlet$Listener: void closeConnection()>/assign/instruction2
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction53
[com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder::MockObject, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction23	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction53
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/assign/instruction32	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/assign/instruction6
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/assign/instruction4
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction20
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction6	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction31
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setTSIA(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getTSIA()>/assign/instruction2
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean getRandomInstance()>/new com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean/0]	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: void setOpenTSIA(java.math.BigDecimal)>/assign/instruction3	<com.ibm.websphere.samples.daytrader.beans.MarketSummaryDataBean: java.math.BigDecimal getOpenTSIA()>/assign/instruction2
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction53
[<<immutable-context>>, <com.ibm.websphere.samples.daytrader.web.websocket.ActionDecoder: com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage decode(java.lang.String)>/new com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage/0]	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction23	<com.ibm.websphere.samples.daytrader.web.websocket.ActionMessage: void doDecoding(java.lang.String)>/assign/instruction53
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple1: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/assign/instruction32	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/assign/instruction6
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void <init>()>/assign/instruction32	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean1: void checkInjectionValidation()>/assign/instruction6
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction15
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction5	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction19
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction8	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction23
[com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.beanval.PingServletBeanValSimple2: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2/0]	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction8	<com.ibm.websphere.samples.daytrader.web.prims.beanval.SimpleBean2: void <init>()>/assign/instruction26
[com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingServlet2DB: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect/0]	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.impl.direct.TradeDirect: java.sql.Connection getConn()>/assign/instruction4
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction4	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction20
[com.ibm.websphere.samples.daytrader.web.prims.PingSession3::MockObject, <com.ibm.websphere.samples.daytrader.web.prims.PingSession3: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>/new com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object/0]	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction6	<com.ibm.websphere.samples.daytrader.web.prims.PingSession3Object: void <init>()>/assign/instruction31
